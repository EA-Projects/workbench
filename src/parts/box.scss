@mixin magic-border($width, $color, $duration, $direction) {
	position: relative;
	&:before {
		content: '';
		position: absolute;
		width: calc(100% + #{$width * 2});
		height: calc(100% + #{$width * 2});
		top: calc(#{$width}/ -1);
		left: calc(#{$width}/ -1);
		background: linear-gradient(to right, $color 0%, $color 100%),
			linear-gradient(to top, $color 50%, transparent 50%),
			linear-gradient(to top, $color 50%, transparent 50%),
			linear-gradient(to right, $color 0%, $color 100%),
			linear-gradient(to left, $color 0%, $color 100%);
		background-size: 100% $width, $width 200%, $width 200%, 0% $width, 0% $width;
		background-position: 50% 100%, 0% 0%, 100% 0%, 100% 0%, 0% 0%;
		background-repeat: no-repeat, no-repeat;
		transition: transform $duration ease-in-out,
			background-position $duration ease-in-out,
			background-size $duration ease-in-out;
		transform: scaleX(0) rotate(180deg * $direction);
		transition-delay: $duration * 2, $duration, 0s;
	}
	&.animated {
		&:before {
			background-size: 200% $width, $width 400%, $width 400%, 32% $width,
				32% $width;
			background-position: 50% 100%, 0% 100%, 100% 100%, 100% 0%, 0% 0%;
			transform: scaleX(1) rotate(180deg * $direction);
			transition-delay: 0s, $duration, $duration * 2;
		}
	}
}

@mixin magic-border-mask($width, $duration, $background, $direction) {
	position: relative;
	&:before {
		content: '';
		position: absolute;
		width: calc(100% + #{$width * 2});
		height: calc(100% + #{$width * 2});
		top: calc(#{$width}/ -1);
		left: calc(#{$width}/ -1);
		mask: linear-gradient(to right, #000 0%, #000 100%),
			linear-gradient(to top, #000 50%, transparent 50%),
			linear-gradient(to top, #000 50%, transparent 50%),
			linear-gradient(to right, #000 0%, #000 100%),
			linear-gradient(to left, #000 0%, #000 100%);
		mask-size: 100% $width, $width 200%, $width 200%, 0% $width, 0% $width;
		mask-position: 50% 100%, 0% 0%, 100% 0%, 100% 0%, 0% 0%;
		mask-repeat: no-repeat, no-repeat;
		transition: transform $duration ease-in-out,
			mask-position $duration ease-in-out, mask-size $duration ease-in-out;
		transform: scaleX(0) rotate(180deg * $direction);
		transition-delay: $duration * 2, $duration, 0s;
		background: $background;
	}
	&:hover {
		&:before {
			mask-size: 200% $width, $width 400%, $width 400%, 55% $width, 55% $width;
			mask-position: 50% 100%, 0% 100%, 100% 100%, 100% 0%, 0% 0%;
			transform: scaleX(1) rotate(180deg * $direction);
			transition-delay: 0s, $duration, $duration * 2;
		}
	}
}

.wrap {
	margin: 0 auto;
	display: table;
	position: relative;
	h6 {
		color: #fff;
		font-size: 17px;
		font-weight: 700;
		letter-spacing: 6px;
		position: absolute;
		top: 8px;
		left: 0;
		width: 100%;
		@media (max-width: 767px) {
			font-size: 12px;
			letter-spacing: 4px;
			top: 11px;
		}
		@media (max-width: 575px) {
			font-size: 11px;
			letter-spacing: 2px;
			top: 13px;
		}
		@media (max-width: 424px) {
			font-size: 10px;
			letter-spacing: 1px;
			top: 15px;
		}
	}
	.box {
		text-decoration: none;
		color: #222;
		padding: 25px 50px;
		text-align: center;
		@include magic-border(8px, #fff, 0.6s, 0);
		margin: 20px 0;
		flex-grow: 1;
		h1 {
			color: #fff;
			strong {
				color: #fff;
				font-weight: 700;
			}
		}
		@media (max-width: 991px) {
			padding: 25px 30px;
		}
		@media (max-width: 767px) {
			padding: 25px 10px;
			@include magic-border(6px, #fff, 0.6s, 0);
		}
		@media (max-width: 575px) {
			@include magic-border(3px, #fff, 0.6s, 0);
			padding: 25px 5px;
		}
	}

	@media (max-width: 991px) {
		width: 100%;
	}
}
